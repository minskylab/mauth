{"ast":null,"code":"var _jsxFileName = \"/Users/bregy/Documents/mauth/client/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button, Center, Flex, Input, Text } from \"@chakra-ui/core\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst SignInInput = ({\n  label,\n  placeholder,\n  inputValue,\n  onChangeValue\n}) => {\n  return __jsx(Box, {\n    my: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    fontSize: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, label), __jsx(Input, {\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: e => onChangeValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst IndexPage = () => {\n  const {\n    0: credentials,\n    1: setCredentials\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    0: loading,\n    1: setloading\n  } = useState(false);\n\n  const signIn = () => {\n    console.log(credentials);\n    setloading(true);\n    axios.post(\"http://localhost:8080/login\", credentials).then(res => {\n      // console.log(res);\n      const token = res.data.token;\n      localStorage.setItem(\"token\", token);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setloading(false);\n    });\n  };\n\n  return __jsx(Center, {\n    w: \"100vw\",\n    h: \"100vh\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    px: 6,\n    py: 8,\n    w: 1 / 4,\n    minWidth: \"320px\",\n    bg: \"gray.50\",\n    direction: \"column\",\n    justifyContent: \"space-between\",\n    borderRadius: \"md\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    fontSize: \"3xl\",\n    mb: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(SignInInput, {\n    label: \"Username\",\n    placeholder: \"Ingrese su username\",\n    inputValue: credentials.username,\n    onChangeValue: u => setCredentials({\n      username: u,\n      password: credentials.password\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), __jsx(SignInInput, {\n    label: \"Contrase単a\",\n    placeholder: \"Ingrese su contrase単a\",\n    inputValue: credentials.password,\n    onChangeValue: p => setCredentials({\n      username: credentials.username,\n      password: p\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    mt: 2,\n    bg: \"orange.300\",\n    isLoading: loading,\n    loadingText: \"Enviando\",\n    onClick: signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Ingresar\")));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/bregy/Documents/mauth/client/pages/index.tsx"],"names":["Box","Button","Center","Flex","Input","Text","React","useState","axios","SignInInput","label","placeholder","inputValue","onChangeValue","e","target","value","IndexPage","credentials","setCredentials","username","password","loading","setloading","signIn","console","log","post","then","res","token","data","localStorage","setItem","catch","err","finally","u","p"],"mappings":"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","sourcesContent":["import { Box, Button, Center, Flex, Input, Text } from \"@chakra-ui/core\";\nimport { NextPage } from \"next\";\nimport React, { FC, useState } from \"react\";\nimport axios, { AxiosResponse } from \"axios\";\n\ninterface Credentials {\n    username: string;\n    password: string;\n}\n\ninterface SignInputProps {\n    label: string;\n    placeholder: string;\n    inputValue?: string;\n    onChangeValue?: (val: string) => void;\n}\n\nconst SignInInput: FC<SignInputProps> = ({ label, placeholder, inputValue, onChangeValue }: SignInputProps) => {\n    return (\n        <Box my={3}>\n            <Text fontSize={\"sm\"}>{label}</Text>\n            <Input placeholder={placeholder} value={inputValue} onChange={(e) => onChangeValue(e.target.value)} />\n        </Box>\n    );\n};\n\nconst IndexPage: NextPage = () => {\n    const [credentials, setCredentials] = useState<Credentials>({ username: \"\", password: \"\" });\n    const [loading, setloading] = useState<boolean>(false);\n\n    const signIn = () => {\n        console.log(credentials);\n        setloading(true);\n        axios\n            .post(\"http://localhost:8080/login\", credentials)\n            .then((res: AxiosResponse) => {\n                // console.log(res);\n                const token = res.data.token;\n                localStorage.setItem(\"token\", token);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setloading(false);\n            });\n    };\n\n    return (\n        <Center w=\"100vw\" h=\"100vh\" position=\"absolute\" top={0} left={0}>\n            <Flex\n                px={6}\n                py={8}\n                w={1 / 4}\n                minWidth={\"320px\"}\n                bg={\"gray.50\"}\n                direction={\"column\"}\n                justifyContent={\"space-between\"}\n                borderRadius=\"md\"\n                as={\"button\"}\n            >\n                <Text fontSize={\"3xl\"} mb={6}>\n                    Sign In\n                </Text>\n\n                <Box>\n                    <SignInInput\n                        label={\"Username\"}\n                        placeholder={\"Ingrese su username\"}\n                        inputValue={credentials.username}\n                        onChangeValue={(u: string) => setCredentials({ username: u, password: credentials.password })}\n                    />\n                    <SignInInput\n                        label={\"Contrase単a\"}\n                        placeholder={\"Ingrese su contrase単a\"}\n                        inputValue={credentials.password}\n                        onChangeValue={(p: string) => setCredentials({ username: credentials.username, password: p })}\n                    />\n                </Box>\n\n                <Button mt={2} bg={\"orange.300\"} isLoading={loading} loadingText=\"Enviando\" onClick={signIn}>\n                    Ingresar\n                </Button>\n            </Flex>\n        </Center>\n    );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}