{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/bregy/Documents/mauth/client/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Center, Flex, Input, Text } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nvar SignInInput = function SignInInput(_ref) {\n  var label = _ref.label,\n      placeholder = _ref.placeholder,\n      inputValue = _ref.inputValue,\n      onChangeValue = _ref.onChangeValue;\n  return __jsx(Box, {\n    my: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    fontSize: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, label), __jsx(Input, {\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: function onChange(e) {\n      return onChangeValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n};\n\n_c = SignInInput;\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useState = useState(\"red\"),\n      bgColor = _useState[0],\n      setBgColor = _useState[1];\n\n  var _useState2 = useState(\"Hello World\"),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      credentials = _useState3[0],\n      setCredentials = _useState3[1];\n\n  useEffect(function () {\n    console.log(\"I'm rendering\");\n  }, [message]);\n\n  var onClick = function onClick() {\n    setMessage(message.split(\" \").reverse().join(\" \"));\n    setBgColor(bgColor === \"red\" ? \"green\" : \"red\");\n  };\n\n  return __jsx(Center, {\n    w: \"100vw\",\n    h: \"100vh\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    px: 6,\n    py: 8,\n    w: 1 / 4,\n    minWidth: \"320px\",\n    bg: \"gray.50\",\n    direction: \"column\",\n    justifyContent: \"space-between\",\n    borderRadius: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    fontSize: \"3xl\",\n    mb: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(SignInInput, {\n    label: \"Username\",\n    placeholder: \"Ingrese su username\",\n    inputValue: credentials.username,\n    onChangeValue: function onChangeValue(u) {\n      return setCredentials({\n        username: u,\n        password: credentials.password\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), __jsx(SignInInput, {\n    label: \"Contrase単a\",\n    placeholder: \"Ingrese su contrase単a\",\n    inputValue: credentials.password,\n    onChangeValue: function onChangeValue(p) {\n      return setCredentials({\n        username: credentials.username,\n        password: p\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    mt: 2,\n    bg: \"orange.300\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Ingresar\")), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, JSON.stringify(credentials))));\n};\n\n_s(IndexPage, \"KJW1XbVTCIILP0GY6Vsku78VNRU=\");\n\n_c2 = IndexPage;\nexport default IndexPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInInput\");\n$RefreshReg$(_c2, \"IndexPage\");","map":{"version":3,"sources":["/Users/bregy/Documents/mauth/client/pages/index.tsx"],"names":["Box","Button","Center","Flex","Input","Text","React","useEffect","useState","SignInInput","label","placeholder","inputValue","onChangeValue","e","target","value","IndexPage","bgColor","setBgColor","message","setMessage","username","password","credentials","setCredentials","console","log","onClick","split","reverse","join","u","p","JSON","stringify"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,IAA3C,QAAuD,iBAAvD;AAEA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAcA,IAAMC,WAA+B,GAAG,SAAlCA,WAAkC,OAAuE;AAAA,MAApEC,KAAoE,QAApEA,KAAoE;AAAA,MAA7DC,WAA6D,QAA7DA,WAA6D;AAAA,MAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,MAApCC,aAAoC,QAApCA,aAAoC;AAC3G,SACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBH,KAAvB,CADJ,EAEI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAEC,WAApB;AAAiC,IAAA,KAAK,EAAEC,UAAxC;AAAoD,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,aAAOD,aAAa,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB;AAAA,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAPD;;KAAMP,W;;AASN,IAAMQ,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAAA;;AAAA,kBACAT,QAAQ,CAAS,KAAT,CADR;AAAA,MACvBU,OADuB;AAAA,MACdC,UADc;;AAAA,mBAEAX,QAAQ,CAAS,aAAT,CAFR;AAAA,MAEvBY,OAFuB;AAAA,MAEdC,UAFc;;AAAA,mBAIQb,QAAQ,CAAc;AAAEc,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAd,CAJhB;AAAA,MAIvBC,WAJuB;AAAA,MAIVC,cAJU;;AAM9BlB,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;;AAIA,MAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBP,IAAAA,UAAU,CAACD,OAAO,CAACS,KAAR,CAAc,GAAd,EAAmBC,OAAnB,GAA6BC,IAA7B,CAAkC,GAAlC,CAAD,CAAV;AACAZ,IAAAA,UAAU,CAACD,OAAO,KAAK,KAAZ,GAAoB,OAApB,GAA8B,KAA/B,CAAV;AACH,GAHD;;AAKA,SACI,MAAC,MAAD;AAAQ,IAAA,CAAC,EAAC,OAAV;AAAkB,IAAA,CAAC,EAAC,OAApB;AAA4B,IAAA,QAAQ,EAAC,UAArC;AAAgD,IAAA,GAAG,EAAE,CAArD;AAAwD,IAAA,IAAI,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,EAAE,EAAE,CADR;AAEI,IAAA,EAAE,EAAE,CAFR;AAGI,IAAA,CAAC,EAAE,IAAI,CAHX;AAII,IAAA,QAAQ,EAAE,OAJd;AAKI,IAAA,EAAE,EAAE,SALR;AAMI,IAAA,SAAS,EAAE,QANf;AAOI,IAAA,cAAc,EAAE,eAPpB;AAQI,IAAA,YAAY,EAAC,IARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,KAAhB;AAAuB,IAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,EAcI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,UADX;AAEI,IAAA,WAAW,EAAE,qBAFjB;AAGI,IAAA,UAAU,EAAEM,WAAW,CAACF,QAH5B;AAII,IAAA,aAAa,EAAE,uBAACU,CAAD;AAAA,aAAeP,cAAc,CAAC;AAAEH,QAAAA,QAAQ,EAAEU,CAAZ;AAAeT,QAAAA,QAAQ,EAAEC,WAAW,CAACD;AAArC,OAAD,CAA7B;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,YADX;AAEI,IAAA,WAAW,EAAE,uBAFjB;AAGI,IAAA,UAAU,EAAEC,WAAW,CAACD,QAH5B;AAII,IAAA,aAAa,EAAE,uBAACU,CAAD;AAAA,aAAeR,cAAc,CAAC;AAAEH,QAAAA,QAAQ,EAAEE,WAAW,CAACF,QAAxB;AAAkCC,QAAAA,QAAQ,EAAEU;AAA5C,OAAD,CAA7B;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAdJ,EA6BI,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAE,CAAZ;AAAe,IAAA,EAAE,EAAE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ,CADJ,EAkCI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAeX,WAAf,CAAP,CADJ,CAlCJ,CADJ;AAwCH,CAvDD;;GAAMP,S;;MAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import { Box, Button, Center, Flex, Input, Text } from \"@chakra-ui/core\";\nimport { NextPage } from \"next\";\nimport React, { FC, useEffect, useState } from \"react\";\n\ninterface Credentials {\n    username: string;\n    password: string;\n}\n\ninterface SignInputProps {\n    label: string;\n    placeholder: string;\n    inputValue?: string;\n    onChangeValue?: (val: string) => void;\n}\n\nconst SignInInput: FC<SignInputProps> = ({ label, placeholder, inputValue, onChangeValue }: SignInputProps) => {\n    return (\n        <Box my={3}>\n            <Text fontSize={\"sm\"}>{label}</Text>\n            <Input placeholder={placeholder} value={inputValue} onChange={(e) => onChangeValue(e.target.value)} />\n        </Box>\n    );\n};\n\nconst IndexPage: NextPage = () => {\n    const [bgColor, setBgColor] = useState<string>(\"red\");\n    const [message, setMessage] = useState<string>(\"Hello World\");\n\n    const [credentials, setCredentials] = useState<Credentials>({ username: \"\", password: \"\" });\n\n    useEffect(() => {\n        console.log(\"I'm rendering\");\n    }, [message]);\n\n    const onClick = () => {\n        setMessage(message.split(\" \").reverse().join(\" \"));\n        setBgColor(bgColor === \"red\" ? \"green\" : \"red\");\n    };\n\n    return (\n        <Center w=\"100vw\" h=\"100vh\" position=\"absolute\" top={0} left={0}>\n            <Flex\n                px={6}\n                py={8}\n                w={1 / 4}\n                minWidth={\"320px\"}\n                bg={\"gray.50\"}\n                direction={\"column\"}\n                justifyContent={\"space-between\"}\n                borderRadius=\"md\"\n            >\n                <Text fontSize={\"3xl\"} mb={6}>\n                    Sign In\n                </Text>\n\n                <Box>\n                    <SignInInput\n                        label={\"Username\"}\n                        placeholder={\"Ingrese su username\"}\n                        inputValue={credentials.username}\n                        onChangeValue={(u: string) => setCredentials({ username: u, password: credentials.password })}\n                    />\n                    <SignInInput\n                        label={\"Contrase単a\"}\n                        placeholder={\"Ingrese su contrase単a\"}\n                        inputValue={credentials.password}\n                        onChangeValue={(p: string) => setCredentials({ username: credentials.username, password: p })}\n                    />\n                </Box>\n\n                <Button mt={2} bg={\"orange.300\"}>\n                    Ingresar\n                </Button>\n            </Flex>\n            <Box>\n                <Text>{JSON.stringify(credentials)}</Text>\n            </Box>\n        </Center>\n    );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}